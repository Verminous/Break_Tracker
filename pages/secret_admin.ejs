<!-- ////////////////// - 1ST IN DOM > PREVENT FLICKER - ////////////////// -->

<script src="/js/theme_setup.js"></script>

<!-- ////////////////// - LINED STYLES AND SCRIPTS - ////////////////// -->

<link rel="stylesheet" type="text/css" href="/css/common.css">
<link rel="stylesheet" type="text/css" href="/css/themes.css">
<link rel="stylesheet" type="text/css" href="/css/breaks.css">
<link rel="stylesheet" type="text/css" href="/css/timer.css">
<link rel="stylesheet" type="text/css" href="/css/modals.css">

<script src="/js/timer.js"></script>

<br>

<!-- ////////////////// - DARK MODE - ////////////////// -->

<li style="display: block;" class="toggle-moon">
  <icon href="#" id="toggle-mode-btn-moon" class="toggle-mode">
    <span class="material-symbols-outlined">brightness_3</span>
  </icon>
</li>

<li style="display: block;" class="toggle-sun">
  <icon href="#" id="toggle-mode-btn-sun" class="toggle-mode">
    <span class="material-symbols-outlined">sunny</span>
  </icon>
</li>

<!-- ////////////////// - NAV - ////////////////// -->

<navbar>
  <li><a href="/secret">Breaks</a></li>
  <section class="vertical-line"></section>
  <li><a href="/account">Password</a></li>
  <section class="vertical-line"></section>
  <li><a href="/register">Register</a></li>
  <section class="vertical-line"></section>
  <li><a href="/users">Accounts</a></li>
  <section class="vertical-line"></section>
  <li><a href="/logout">Logout</a></li>
</navbar>
&nbsp;
<br>

<hr class="divider">

<!-- ////////////////// - GREET - ////////////////// -->

<greet>Hello <%= name %>
</greet><br>

<joke>No breaks for you!</joke><br>

<hr class="divider">

<!-- ////////////////// - AVAILABLE SLOTS + BREAK MINUTES- ////////////////// -->

<form id="breakSlotsForm" class="break-header" action="/break-slots" method="POST">
  <div class="grid-container-spc">
    <span class="grid-item item1">
      <description class="item1">Slots available:</description>
    </span>
    <span class="grid-item item2">
      <select id="dropdown" name="slotsavailable" class="item2 number-selector">
        <option id="currentSlot" value='<%= breakSlots.slots %>'>
          <%= breakSlots.slots %>
        </option>
        <option value="0">0</option>
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
        <option value="6">6</option>
        <option value="7">7</option>
        <option value="8">8</option>
        <option value="9">9</option>
        <option value="10">10</option>
      </select>
    </span>
    <span class="grid-item item3">
    </span>
  </div>
</form>

<script>
  const dropdown = document.getElementById('dropdown');
  const currentSlot = document.getElementById('currentSlot');

  dropdown.addEventListener('focus', function () {
    currentSlot.style.display = 'none';
  });

  dropdown.addEventListener('blur', function () {
    currentSlot.style.display = '';
  });

  dropdown.addEventListener('change', function () {
    document.getElementById('breakSlotsForm').submit();
  });
</script>

<!-- ////////////////// - BREAKS - ////////////////// -->

<div class="break-container">

  <ul class="break-list">
    <div id="foo" class="main">
      <% let index=0; %>
        <% breakTracker.forEach(details=> { %>

          <li class="break-list-item-admin">
            <div class="break-list-item-name-admin">
              <arrow-icon class="arrow" onclick="toggleExtraInfo(event)">
                <span class="material-symbols-outlined">keyboard_arrow_right</span>
              </arrow-icon>

              <%= details.user %>

                <div class="timer-container">
                  <% if (!details.hasStarted) { %>
                    <span class="not-started">not started</span>
                    <% } else { %>
                      <span class="numerical-timer-admin <%= `timer-${details._id}` %>" style="display: none;">
                        <filer>.</filer>
                      </span>
                      <% } %>
                </div>
                <a href="#" class="remove-admin" id="remove_admin_<%= details._id %>"
                  onclick="removeBreak('<%= details._id %>', <%= !details.hasStarted %>, true)" style="display: block;">
                  <span class="material-symbols-outlined">
                    close
                  </span>
                </a>
            </div>
            <div class="extra-info" style="display:none;">
              <infotitle>
                Submitted at:
              </infotitle>
              <info class="submitted-time" data-time="<%= details.startTime %>">
                Loading...
              </info><br>
              <infotitle>
                Duration set:
              </infotitle>
              <info>
                <%= details.duration %> mins
              </info><br>
              <infotitle>
                Started at:
              </infotitle>
              <info>
                <% if (!details.hasStarted) { %>
                  not started
                  <% } else { %>
                    <span class="started-time" data-time="<%= details.breakStartTimeStamp %>">
                      <%= details.breakStartTimeStamp %>
                    </span>
                    <% } %>
              </info><br>
            </div>
          </li>

          <script>
            function toggleExtraInfo(event) {
              const arrow = event.target.closest('.arrow');
              const listItem = event.target.closest('.break-list-item-admin');
              const extraInfo = listItem.querySelector('.extra-info');
              arrow.classList.toggle('open');
              extraInfo.style.display = extraInfo.style.display === 'none' ? 'block' : 'none';
              listItem.classList.toggle('expanded');
              const arrowIcon = arrow.querySelector('.material-icons-outlined');
              if (arrow.classList.contains('open')) {
                arrowIcon.style.transform = 'rotate(90deg)';
              } else {
                arrowIcon.style.transform = 'rotate(0deg)';
              }
            }
          </script>

          <script>
            myFingTimer(`<%= details._id %>`, <%= details.hasStarted %>);
            function myFingTimer(id, shouldStart) {
              console.log('myFingTimer called with breakId:', id);
              let duration = parseInt('<%= details.duration %>', 10) * 60;
              let presentTime = new Date().getTime() / 1000;
              let breakStartTimeStamp = (new Date('<%= details.breakStartTimeStamp %>').getTime() / 1000) || presentTime;
              let timeCalc = (duration) - (presentTime - breakStartTimeStamp) + 63;
              id = id.replace(/&#34;/g, '-');
              let display = document.querySelector(`.timer-${id}`);
              display.classList.remove('loading');
              console.log('id:', id);
              console.log('display:', display);
              if (shouldStart) {
                display.style.display = 'inline';
              } else {
                return;
              }
              startTimer(timeCalc, display, id);
            }
          </script>

          <% }) %>
    </div>
  </ul>
</div>

<!-- ////////////// SOCKET.IO - GLOBAL RELOAD ////////////////-->

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  socket.on('reload', () => {
    console.log('Reload event received');
    setTimeout(() => location.reload(), 500);
  });
</script>

<!-- ////////////////// - HANDLING LOCALTIME ZONES - ////////////////// -->

<script>
  function updateLocalTimes() {
    const submittedTimes = document.querySelectorAll('.submitted-time');
    const startedTimes = document.querySelectorAll('.started-time');
    submittedTimes.forEach(timeElement => {
      const time = new Date(timeElement.dataset.time);
      timeElement.textContent = time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false });
    });
    startedTimes.forEach(timeElement => {
      const time = new Date(timeElement.dataset.time);
      if (time.getTime() !== 0) {
        timeElement.textContent = time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false });
      } else {
        timeElement.textContent = 'Not started';
      }
    });
  }
  function makeInfoVisible() {
    const infos = document.querySelectorAll('info');
    infos.forEach((info) => {
      info.classList.add('visible');
    });
  }
  function makeInfoVisible() {
    const infotitles = document.querySelectorAll('infotitle');
    const infos = document.querySelectorAll('info');

    infotitles.forEach((infotitle) => {
      infotitle.classList.add('visible');
    });

    infos.forEach((info) => {
      info.classList.add('visible');
    });
  }
  updateLocalTimes();
  makeInfoVisible();
</script>

<!-- ////////////// MODALS ////////////////-->

<div id="myModal-Neg" class="modal">
  <div class="modal-content-neg">
    <span class="exclamation material-symbols-outlined">exclamation</span>
    <span id="message-neg" class="modal-text"></span>
    <span class="close-neg material-symbols-outlined">close</span>
  </div>
</div>

<div id="myModal-Pos" class="modal">
  <div class="modal-content-pos">
    <span class="check material-symbols-outlined">check</span>
    <span id="message-pos" class="modal-text"></span>
    <span class="close-pos material-symbols-outlined">close</span>
  </div>
</div>

<!-- ////////////////// - FETCH JS FILES - ////////////////// -->

<script src="/js/toggle.js"></script>
<script src="/js/modals.js"></script>
<script src="/sortable/Sortable.min.js"></script>
<script src="/js/sort.js"></script>