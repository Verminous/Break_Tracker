<!-- ////////////////// - PARTIALS - ////////////////// -->

<%- include('partials/socket.ejs') %>
    <%- include('partials/header.ejs') %>
        <%- include('partials/messageModals.ejs') %>
            <%- include('partials/navigation.ejs') %>

                &nbsp;
                <br>

                <hr class="divider">

                <style>
                    .log-year-container,
                    .log-month-container,
                    .log-day-container {
                        position: relative;
                        left: 3px;
                        width: 260px;
                        max-height: 9999px;
                        padding: 3px;
                        margin-top: 5px;
                        text-align: left;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        box-shadow: 0px 3px 7px 0px var(--break-list-item-shadow-color);
                        background: linear-gradient(var(--break-list-item-background-color), var(--break-list-item-background-color)) padding-box,
                            linear-gradient(to bottom, var(--break-list-item-sidegradient1-color), var(--break-list-item-sidegradient2-color)) border-box;
                        color: var(--break-list-item-text-color);
                        border: 1px solid transparent;
                        border-radius: 10px;
                        overflow: hidden;
                        vertical-align: middle;
                        transition: all var(--animation-duration-more) ease-in-out;
                    }

                    .log-month-container,
                    .log-day-container {
                        display: none;
                    }

                    .open {
                        display: block !important;
                    }

                    .log-year-container {
                        width: 270px;
                    }

                    .log-month-container {
                        width: 255px;
                    }

                    .log-day-container {
                        width: 240px;
                    }

                    .log-year button,
                    .log-month button,
                    .log-day button {
                        font-family: 'M PLUS 1';
                        top: 5px;
                        background: none;
                        border: none;
                        color: var(--links-color);
                        cursor: pointer;
                        margin-left: 0px;
                        transition: color 0.5s ease;
                        font-size: 14px;
                        text-align: left;
                        color: #ffffff;
                        padding: 5px 10px;
                        border-radius: 4px;
                        transition: all 0.3s ease;
                    }

                    .log-year {
                        position: relative;
                        top: 0px;
                    }

                    .log-year button:hover,
                    .log-month button:hover,
                    .log-day button:hover {
                        font-family: 'M PLUS 1';
                    }

                    .log-year button .button-content:hover .arrow-logs,
                    .log-month button .button-content:hover .arrow-logs,
                    .log-day button .button-content:hover .arrow-logs {
                        color: var(--links-hover-color);
                    }

                    .arrow-logs {
                        color: var(--break-list-item-icons-color);
                        position: relative;
                        top: 0px;
                        left: -8px;
                        margin-right: -8px;
                        display: inline-block;
                        cursor: pointer;
                        transform-origin: center center;
                        transform: scale(0.8);
                        transition: all 0.3s ease;
                    }

                    .arrow-logs:hover {
                        color: var(--links-hover-color);
                    }

                    .dl-d-icons-container-year {
                        position: relative;
                        left: 120px;
                    }

                    .dl-d-icons-container-month {
                        position: relative;
                        left: 123px;
                    }

                    .dl-d-icons-container-day {
                        position: relative;
                        left: 38px;
                    }

                    .dl-d-icons {
                        font-size: 18px;
                        position: relative;
                        top: 0px;
                        margin-right: -10px;
                        vertical-align: middle;
                        transform: scale(0.9);
                    }

                    .dl-d-icons:hover {
                        color: var(--links-hover-color);
                    }

                    .folder-buttons {
                        position: relative;
                        top: 1px;
                    }

                    .log-button {
                        margin-left: auto;
                    }

                    .rotate {
                        transform: rotate(90deg) scale(0.8);
                    }

                    .material-symbols-outlined {
                        color: var(--break-list-item-icons-color);
                        vertical-align: middle;
                        transition: all 0.3s ease-in-out;
                    }
                </style>

                <greet>Logs</greet>

                <br><br><br>

                <% logs.forEach((logYear, yearIndex)=> { %>
                    <div class="log-year-container">
                        <div class="log-year" id="year<%= yearIndex %>">
                            <button onclick="toggleLogsContainer(this)">
                                <span class="button-content">
                                    <span class="material-symbols-outlined arrow-logs">keyboard_arrow_right</span>
                                    <span class="folder-buttons">
                                        <%= logYear.year %>
                                    </span>
                                </span>
                            </button>
                            <!-- Add Download Button for Year Folder -->
                            <span class="dl-d-icons-container-year">
                                <button class="log-button"
                                    onclick="downloadYearLogs('<%= logYear.year %>', '<%= JSON.stringify(logYear.months) %>')">
                                    <i class="material-symbols-outlined dl-d-icons"
                                        style="display: inline-block;">get_app</i>
                                </button>
                                <!-- Add Delete Button for Year Folder -->
                                <button class="log-button" onclick="deleteYearLogs('<%= logYear.year %>')">
                                    <i class="material-symbols-outlined dl-d-icons"
                                        style="display: inline-block;">close</i>
                                </button>
                            </span>
                            <div class="log-month-container">
                                <% logYear.months.forEach((logMonth, monthIndex)=> { %>
                                    <div class="log-month" id="month<%= monthIndex %>">
                                        <button onclick="toggleLogsContainer(this)">
                                            <span class="button-content">
                                                <span
                                                    class="material-symbols-outlined arrow-logs">keyboard_arrow_right</span>
                                                <span class="folder-buttons">
                                                    <%= logMonth.month %>
                                                </span>
                                            </span>
                                        </button>
                                        <!-- Add Download Button for Month Folder -->
                                        <span class="dl-d-icons-container-month">
                                            <button class="log-button"
                                                onclick="downloadMonthLogs('<%= logYear.year %>', '<%= logMonth.month %>', '<%= JSON.stringify(logMonth.logs) %>')">
                                                <i class="material-symbols-outlined dl-d-icons"
                                                    style="display: inline-block;">get_app</i>
                                            </button>
                                            <!-- Add Delete Button for Month Folder -->
                                            <button class="log-button"
                                                onclick="deleteMonthLogs('<%= logYear.year %>', '<%= logMonth.month %>')">
                                                <i class="material-symbols-outlined dl-d-icons"
                                                    style="display: inline-block;">close</i>
                                            </button>
                                        </span>
                                        <div class="log-day-container">
                                            <% logMonth.logs.forEach(logFile=> { %>
                                                <div class="log-day">
                                                    <button class="log-button"
                                                        onclick="fetchLogContent('<%= logYear.year %>', '<%= logMonth.month %>', '<%= logFile %>')">
                                                        <span class="folder-buttons">
                                                            <%= logFile %>
                                                        </span>
                                                    </button>
                                                    <!-- Add Download Button for Daily Logs -->
                                                    <span class="dl-d-icons-container-day">
                                                        <button class="log-button"
                                                            onclick="downloadLogFile('<%= logYear.year %>', '<%= logMonth.month %>', '<%= logFile %>')">
                                                            <i class="material-symbols-outlined dl-d-icons"
                                                                style="display: inline-block;">get_app</i>
                                                        </button>
                                                        <!-- Add Delete Button for Daily Logs -->
                                                        <button class="log-button"
                                                            onclick="deleteLogFile('<%= logYear.year %>', '<%= logMonth.month %>', '<%= logFile %>')">
                                                            <i class="material-symbols-outlined dl-d-icons"
                                                                style="display: inline-block;">close</i>
                                                        </button>
                                                    </span>
                                                </div>
                                                <% }); %>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                        </div>
                    </div>
                    <% }); %>


                        <script>
                            const toggleLogsContainer = (button) => {
                                const logsContainer = button.parentElement.querySelector('.log-year-container, .log-month-container, .log-day-container');
                                const arrow = button.querySelector('.arrow-logs');
                                logsContainer.classList.toggle('open');
                                arrow.classList.toggle('rotate');
                                saveMenuState();
                            }



                            const saveMenuState = () => {
                                const menuState = {};
                                const logContainers = document.querySelectorAll('.log-year-container, .log-month-container, .log-day-container');
                                logContainers.forEach(container => {
                                    const id = container.parentElement.id;
                                    const isOpen = container.classList.contains('open');
                                    menuState[id] = isOpen;
                                });
                                localStorage.setItem('menuState', JSON.stringify(menuState));
                            }

                            const loadMenuState = () => {
                                const menuState = JSON.parse(localStorage.getItem('menuState'));
                                if (menuState) {
                                    for (const id in menuState) {
                                        const isOpen = menuState[id];
                                        const container = document.getElementById(id);
                                        if (isOpen && container) {
                                            const logsContainer = container.querySelector('.log-year-container, .log-month-container, .log-day-container');
                                            if (logsContainer) {
                                                container.querySelector('.arrow-logs').classList.add('rotate');
                                                logsContainer.classList.add('open');
                                            }
                                        }
                                    }
                                }
                            }


                            window.addEventListener('DOMContentLoaded', () => {
                                loadMenuState();
                            });



                            const fetchLogContent = async (year, month, day) => {
                                try {
                                    const response = await fetch(`/logs/${year}/${month}/${day}`);
                                    const data = await response.json();

                                    let params = 'toolbar=no, popup=yes, directories=no, titlebar=no, toolbar=no, location=no, status=no, menubar=no, scrollbars=no, resizable=no,width=750,height=450,left=100,top=100';
                                    let logWindow = window.open('', '', params);

                                    logWindow.document.write(`
                                <!DOCTYPE html>
                                <html>
                                <head>
                                    <title>Log: ${year}/${month}/${day}</title>
                                    <style>
                                        body {
                                            background-color: black;
                                            color: white;
                                        }
                                        pre {
                                            white-space: pre-wrap; 
                                            white-space: -moz-pre-wrap; 
                                            white-space: -pre-wrap; 
                                            white-space: -o-pre-wrap;
                                            word-wrap: break-word; 
                                        }

                                        span {
                                            font-family:'Courier New', Courier, monospace;
                                            font-size: 12px;
                                        }
                                    </style>
                                </head>
                                <body>
                                    <span>File > ${day}<br></span>
                                    <pre>${data.data}</pre>
                                </body>
                                </html>
                            `);

                                    logWindow.document.close();
                                } catch (error) {
                                    console.error("Error fetching log content:", error);
                                }
                            }

                            const downloadLogFile = (year, month, day) => {
                                // Create a link and programmatically click it to initiate download
                                const link = document.createElement('a');
                                link.href = `/logs/${year}/${month}/${day}/download`;
                                link.download = `${year}-${month}-${day}.log`;
                                document.body.appendChild(link);
                                link.click();
                                document.body.removeChild(link);
                            }

                            const deleteLogFile = async (year, month, day) => {
                                try {
                                    const response = await fetch(`/logs/${year}/${month}/${day}`, { method: 'DELETE' });
                                    if (response.ok) {
                                        console.log('Log file successfully deleted');
                                        // Reload the page or remove the deleted item from DOM
                                        location.reload();
                                    }
                                } catch (error) {
                                    console.error("Error deleting log file:", error);
                                }
                            }

                            const downloadMonthLogs = async (year, month) => {
                                try {
                                    // Send an AJAX request to initiate download
                                    const response = await fetch(`/logs/${year}/${month}/download`, { method: 'GET' });
                                    if (!response.ok) {
                                        throw new Error('Download failed');
                                    }

                                    const blob = await response.blob();
                                    const url = window.URL.createObjectURL(blob);
                                    const a = document.createElement('a');
                                    a.href = url;
                                    a.target = '_blank';
                                    a.download = `${year}-${month}-logs.zip`;
                                    document.body.appendChild(a);
                                    a.click();
                                    a.remove();
                                } catch (error) {
                                    console.error('Error during download:', error);
                                    // Handle the error (e.g., display an error message to the user)
                                }
                            };

                            const downloadYearLogs = async (year) => {
                                try {
                                    // Send an AJAX request to initiate download
                                    const response = await fetch(`/logs/${year}/download`, { method: 'GET' });
                                    if (!response.ok) {
                                        throw new Error('Download failed');
                                    }

                                    const blob = await response.blob();
                                    const url = window.URL.createObjectURL(blob);
                                    const a = document.createElement('a');
                                    a.href = url;
                                    a.target = '_blank';
                                    a.download = `${year}-logs.zip`;
                                    document.body.appendChild(a);
                                    a.click();
                                    a.remove();
                                } catch (error) {
                                    console.error('Error during download:', error);
                                    // Handle the error (e.g., display an error message to the user)
                                }
                            };

                            const deleteMonthLogs = async (year, month) => {
                                try {
                                    const response = await fetch(`/logs/${year}/${month}`, { method: 'DELETE' });
                                    if (response.ok) {
                                        console.log('Logs for the month successfully deleted');
                                        // Reload the page or remove the deleted items from DOM
                                        location.reload();
                                    }
                                } catch (error) {
                                    console.error('Error deleting logs for the month:', error);
                                }
                            };

                            const deleteYearLogs = async (year) => {
                                try {
                                    const response = await fetch(`/logs/${year}`, { method: 'DELETE' });
                                    if (response.ok) {
                                        console.log('Logs for the year successfully deleted');
                                        // Reload the page or remove the deleted items from DOM
                                        location.reload();
                                    }
                                } catch (error) {
                                    console.error('Error deleting logs for the year:', error);
                                }
                            };

                        </script>

                        <!-- ////////////// - BOTTOM PARTIALS - ////////////////-->

                        <%- include('partials/bottomjs.ejs') %>