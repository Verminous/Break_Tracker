  <%- include('partials/header.ejs') %>

    <div class="loader">
      <div class="spinner"></div>
    </div>

    <%- include('partials/modals.ejs') %>

      <form action="/login" method="POST" class="credentials">
        <div class="input-container">
          <input type="text" id="username" name="username" autocomplete="off" class="inputfield" maxlength="" value="">
          <span class="placeholder1 username">&nbsp;Username&nbsp;</span>
        </div>
        <div class="input-container">
          <input type="password" id="password" name="password" autocomplete="off" class="inputfield" maxlength=""
            value="">
          <span class="placeholder1 password">&nbsp;Password&nbsp;</span>
        </div>
        <button id="login-submit-button" type="submit" class="form-button">Login</button>
      </form>

      <script>
        document.addEventListener('DOMContentLoaded', function () {
          const inputFields = document.querySelectorAll('.inputfield');
          inputFields.forEach(input => {
            input.addEventListener('input', handleInput);
            handleInput.call(input);
          });

          function handleInput() {
            if (this.value) {
              this.parentElement.classList.add('has-text');
            } else {
              this.parentElement.classList.remove('has-text');
            }
          }
        });
      </script>

      <%- include('partials/bottomjs.ejs') %>

      <!-- ////////////// FONTS + ICONS LOADER ////////////////-->

  <style>
    .loader {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #ffffff;
      z-index: 1000;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    body {
      opacity: 0;
    }

    .spinner {
      border: 4px solid rgba(0, 0, 0, 0.1);
      width: 40px;
      height: 40px;
      border-radius: 50%;
      border-left-color: #000;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }
  </style>

<div style="opacity: 0;">
  <span class="material-symbols-outlined">close</span>
  <span class="material-symbols-outlined">keyboard_arrow_right</span>
  <span class="material-symbols-outlined">sunny</span>
  <span class="material-symbols-outlined">brightness_3</span>
  <span class="not-started">not started</span>
</div>


<script>

  function loadFonts() {
    const fetchMPlus1 = fetch('https://fonts.googleapis.com/css2?family=M+PLUS+1&display=swap')
      .then((response) => response.text())
      .then((css) => {
        const style = document.createElement('style');
        style.innerHTML = css;
        document.head.appendChild(style);
      });

    const fontShareTechMono = new FontFace(
      'Share Tech Mono',
      "url('https://fonts.gstatic.com/s/sharetechmono/v15/J7aHnp1uDWRBEqV98dVQztYldFcLowEF.woff2')",
      {
        style: 'normal',
        fontFamily: 'Share Tech Mono',
        fontDisplay: 'swap',
      }
    );

    const fontMaterialIcons = new FontFace(
      'Material Icons',
      "url('https://fonts.gstatic.com/s/materialicons/v140/flUhRq6tzZclQEJ-Vdg-IuiaDsNc.woff2')",
      {
        style: 'normal',
        fontFamily: 'Material Icons',
        fontDisplay: 'swap',
      }
    );

    return Promise.all([
      fetchMPlus1,
      fontShareTechMono.load(),
      fontMaterialIcons.load(),
    ]);
  }

  function delay(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
  }

  Promise.all([document.fonts.ready, loadFonts(), delay(1000)]).then(() => {
    setTimeout(() => {
      document.body.style.opacity = '1';
      document.body.style.transition = 'opacity 0.5s ease';
      document.querySelector('.loader').style.display = 'none';
    }, 100);
  });

</script>

