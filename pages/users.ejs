<body class="scrollbar-page">

    <!-- ////////////////// - HEADER SETUP - ////////////////// -->

    <%- include('partials/header.ejs') %>

        <br>

        <!-- ////////////////// - THEME TOGGLE - ////////////////// -->

        <%- include('partials/themes.ejs') %>

            <!-- ////////////// - MODALS - ////////////////-->

            <%- include('partials/modals.ejs') %>

                <!-- ////////////////// - NAV - ////////////////// -->

                <%- include('partials/navigation.ejs') %>

                    &nbsp;
                    <br>

                    <hr class="divider">

                    <!-- ////////////// - ACCOUNTS - ////////////////-->

                    <greet>Accounts</greet><br><br>

                    <br>

                    <!-- ////////////// - SEARCH - //////////////// -->

                    <input type="text" id="search-bar" placeholder="Search users...">

                    <br><br>

                    <!-- ////////////// - ADMINS - //////////////// -->

                    <joke>SPCs</joke>

                    <br><br>

                    <ul id="admin-users" class="roles-list">
                        <% adminUsers.forEach(user=> { %>
                            <% if (user.username !=='admin' ) { %>
                                <li data-id="<%= user._id %>" data-role="<%= user.roles %>"
                                    class="break-list-item-user">
                                    <div class="break-list-item-name-user">
                                        <span>
                                            <%= user.username %>
                                        </span>
                                        <button class="reset-password-button"
                                            data-user-id="<%= user._id %>">Reset</button>
                                        <select class="item-button">
                                            <% if (user.roles==='admin' ) { %>
                                                <option value="admin" selected>Admin</option>
                                                <option value="user">User</option>
                                                <% } else { %>
                                                    <option value="admin">Admin</option>
                                                    <option value="user" selected>User</option>
                                                    <% } %>
                                                        <option value="delete" class="delete-option">Delete</option>
                                        </select>
                                    </div>
                                </li>
                                <% } %>
                                    <% }); %>
                    </ul>

                    <br>

                    <!-- ////////////// - USERS - //////////////// -->

                    <joke>Agents</joke>

                    <br><br>

                    <ul id="normal-users" class="roles-list">
                        <% normalUsers.forEach(user=> { %>
                            <li data-id="<%= user._id %>" data-role="<%= user.roles %>" class="break-list-item-user">
                                <div class="break-list-item-name-user">
                                    <span>
                                        <%= user.username %>
                                    </span>
                                    <button class="reset-password-button" data-user-id="<%= user._id %>">Reset</button>
                                    <select class="item-button">
                                        <% if (user.roles==='admin' ) { %>
                                            <option value="admin" selected>Admin</option>
                                            <option value="user">User</option>
                                            <% } else { %>
                                                <option value="admin">Admin</option>
                                                <option value="user" selected>User</option>
                                                <% } %>
                                                    <option value="delete" class="delete-option">Delete</option>
                                    </select>
                                </div>
                            </li>
                            <% }); %>
                    </ul>

                    <br><br><br>

                    <!-- /////////////// - HELPER FUNCTIONS - //////////////// -->

                    <script>
                        const updateUserRole = async (userId, newRole) => {
                            try {
                                const response = await fetch(`/users/${userId}`, {
                                    method: 'PUT',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ role: newRole }),
                                });
                                if (response.ok) {
                                    console.log(`User ${userId} role updated to ${newRole}`);
                                    location.reload();
                                } else {
                                    console.error(`Error updating user ${userId} role`);
                                }
                            } catch (error) {
                                console.error(`Error updating user ${userId} role: ${error.message}`);
                            }
                        };

                        const deleteUser = async (userId, username) => {
                            console.log(`Attempting to delete user ${userId}`);
                            const confirmed = confirm(`Please confirm deletion of account: ${username}`);
                            if (!confirmed) {
                                return;
                            }
                            try {
                                const response = await fetch(`/delete/${userId}`, {
                                    method: 'DELETE',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                });
                                console.log('DELETE request response:', response);
                                if (response.ok) {
                                    console.log(`User ${userId} deleted`);
                                    location.reload();
                                } else {
                                    console.error(`Error deleting user ${userId}`);
                                }
                            } catch (error) {
                                console.error(`Error deleting user ${userId}: ${error.message}`);
                            }
                        };
                        const selectElements = document.querySelectorAll('.item-button');
                        selectElements.forEach(selectElement => {
                            selectElement.addEventListener('change', event => {
                                const liElement = event.target.closest('li');
                                const userId = liElement.dataset.id;
                                const newRole = event.target[selectElement.selectedIndex].value;
                                if (newRole === 'delete') {
                                    const username = liElement.querySelector('span').textContent;
                                    deleteUser(userId, username);
                                } else {
                                    updateUserRole(userId, newRole);
                                }
                            });
                        });
                    </script>

                    <!-- ////////////////// - HANDLING PASSWORD RESET - /////////////////// -->

                    <script>
                        const resetPassword = async (userId, newPassword, confirmPassword) => {
                            try {
                                const response = await fetch(`/resetpassword`, {
                                    method: "POST",
                                    headers: { "Content-Type": "application/json" },
                                    body: JSON.stringify({ userId, newPassword, confirmPassword }),
                                });

                                if (!response.ok) {
                                    const error = await response.json();
                                    throw new Error(error.error);
                                }

                                return await response.json();
                            } catch (error) {
                                return { success: false, error: error.message };
                            }
                        };


                        const displayResetPasswordModal = (userId) => {
                            const modal = document.getElementById("reset-password-modal");
                            const close = modal.querySelector(".reset-password-close");
                            const form = modal.querySelector("#reset-password-form");
                            modal.style.display = "block";
                            const userIdInput = document.createElement("input");
                            userIdInput.type = "hidden";
                            userIdInput.name = "userId";
                            userIdInput.value = userId;
                            form.appendChild(userIdInput);
                            close.onclick = () => { modal.style.display = "none"; };

                            form.addEventListener("submit", async (e) => {
                                e.preventDefault();
                                const newPassword = document.getElementById("newpassword").value;
                                const confirmPassword = document.getElementById("confirmpassword").value;
                                const errorMessage = document.getElementById("error-message");

                                const result = await resetPassword(userId, newPassword, confirmPassword);

                                if (!result.success) {
                                    errorMessage.textContent = result.error;
                                    errorMessage.style.display = "block";
                                } else {
                                    errorMessage.style.display = "none";
                                    modal.style.display = "none";
                                    location.reload();
                                }
                            });
                        };

                        document.addEventListener('DOMContentLoaded', () => {
                            document.querySelectorAll(".reset-password-button").forEach(button =>
                                button.addEventListener("click", e => {
                                    e.preventDefault();
                                    const li = e.target.closest("li");
                                    const username = li.querySelector(".break-list-item-name-user span").textContent.trim();
                                    const userId = li.dataset.id;
                                    displayResetPasswordModal(userId);
                                })
                            );
                        });
                    </script>

                    <!-- ////////////// - SEARCH FUNCTIONALITY - ////////////////-->

                    <script>
                        const searchInput = document.getElementById('search-bar');
                        searchInput.addEventListener('input', () => {
                            const searchValue = searchInput.value.toLowerCase();
                            const adminUsers = document.querySelectorAll('#admin-users .break-list-item-user');
                            const normalUsers = document.querySelectorAll('#normal-users .break-list-item-user');
                            filterUsers(adminUsers, searchValue);
                            filterUsers(normalUsers, searchValue);
                        });
                        function filterUsers(users, searchValue) {
                            users.forEach(user => {
                                const username = user.querySelector('.break-list-item-name-user span').textContent.toLowerCase();
                                if (username.includes(searchValue)) {
                                    user.style.display = 'list-item';
                                } else {
                                    user.style.display = 'none';
                                }
                            });
                        }
                    </script>

                    <!-- ////////////// - PASSWORD RESET MODAL - ////////////////-->

                    <div id="reset-password-modal" class="reset-password-modal">
                        <div class="reset-password-modal-content">
                            <span class="reset-password-close">&times;</span>
                            <greet class="reset-pass-title">Reset Password</greet>
                            <form action="/resetpassword" method="post" id="reset-password-form" class="credentials">
                                <p id="error-message" style="display:none; color: red;"></p>
                                <input type="password" id="newpassword" name="newPassword" placeholder="New Password">
                                <input type="password" id="confirmpassword" name="confirmPassword"
                                    placeholder="Confirm New Password">
                                <button type="submit" class="form-button">OK</button>
                            </form>
                        </div>
                    </div>

                    <!-- ////////////////// - FETCH BOTTOM PARTIAL - ////////////////// -->

                    <%- include('partials/bottomjs.ejs') %>

</body>